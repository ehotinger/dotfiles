[alias]
	graph = log --graph --color --pretty=format:"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n"

	# Pull in remote changes and all submodules
	p = !"git pull; git submodule foreach git pull origin master"

	# Working tree's short status
	ss = status -s

	# Abbreviated SHA, description, and history graph of the last 20 commits
	l = log --pretty=oneline -n 20 --graph --abbrev-commit

	# Checks out the specified branch or creates it if it doesn't exist
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

	# Delete merged branches
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d; git remote -v update -p"

	br = branch
	c = commit
	co = checkout
	a = add

[apply]
	# Detects whitespace errors
	whitespace = fix

[color]
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true

[help]
	autocorrect = 1

[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	
	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space
	trustctime = false
	editor=vim